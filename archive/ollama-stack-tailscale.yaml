# ollama-stack-tailscale.yaml
# Final, complete, and stable version of the entire stack.

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      containers:
      - name: ollama
        image: ollama/ollama:latest
        ports:
        - containerPort: 11434
        resources:
          requests:
            memory: "8Gi"
            cpu: "2000m"
          limits:
            memory: "48Gi"
            cpu: "10000m"
        volumeMounts:
        - name: ollama-storage
          mountPath: /root/.ollama
      volumes:
      - name: ollama-storage
        persistentVolumeClaim:
          claimName: ollama-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ollama-service
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      serviceAccountName: tailscale-sa
      volumes:
      - name: open-webui-data
        persistentVolumeClaim:
          claimName: open-webui-data-pvc
      - name: tailscale-socket
        emptyDir: {}
      containers:
      - name: open-webui
        image: ghcr.io/open-webui/open-webui:main
        ports:
        - containerPort: 8080
        env:
        - name: OLLAMA_BASE_URL
          value: "http://ollama-service:11434"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: open-webui-data
          mountPath: /app/backend/data
        - name: tailscale-socket
          mountPath: /var/run/tailscale
      - name: tailscale
        image: tailscale/tailscale:latest
        env:
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: TS_AUTHKEY
        - name: TS_HOSTNAME
          value: "open-webui"
        - name: TS_EXTRA_ARGS
          value: --advertise-tags=tag:homelab --accept-routes
        # --- FINAL SIMPLIFIED STARTUP ---
        command:
        - /bin/sh
        - -c
        - tailscaled --state=kube:tailscale --socket=/var/run/tailscale/tailscaled.sock & PID=$! && tailscale up --hostname=${TS_HOSTNAME} --authkey=${TS_AUTHKEY} ${TS_EXTRA_ARGS} && wait $PID
        volumeMounts:
        - name: tailscale-socket
          mountPath: /var/run/tailscale
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "NET_RAW"]
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui-service
  annotations:
    metallb.universe.tf/loadBalancerIPs: 192.168.1.100
spec:
  type: LoadBalancer
  selector:
    app: open-webui
  ports:
    - protocol: TCP
      port: 30258
      targetPort: 8080

